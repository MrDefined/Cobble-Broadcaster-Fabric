plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id "com.matthewprenger.cursegradle" version "1.4.0"
}


group = 'ca.skynetcloud'
version = '1.0.19045'

java {
    archivesBaseName = 'Cobblemon-Broadcast'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {

    mappings channel: 'official', version: '1.19.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'cobblemonbroadcast'

            mods {
                cobblemonbroadcastmod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'cobblemonbroadcast'

            mods {
                cobblemonbroadcastmod {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'cobblemonbroadcast'

            mods {
                cobblemonbroadcastmod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'cobblemonbroadcastmod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                cobblemonbroadcastmod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }


}

dependencies {

    minecraft 'net.minecraftforge:forge:1.19.2-43.2.4'

    compileOnly 'curse.maven:cobblemon-687131:4284573'

}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "cobblemonbroadcastmod",
                "Specification-Vendor"    : "SkyNetCloud",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "SkyNetCloud",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


curseforge {
    if (project.hasProperty('curseApiKey')) {
        apiKey = project.getProperty('curseApiKey')
        project {
            id = "827760"

            changelog = file("Cobble-Broadcaster-${version}-changelog.txt")

            releaseType = 'release'

            addGameVersion '1.19.2'

            mainArtifact(jar) {
                displayName = "Cobble Broadcaster ${version}"
            }
        }
    }
}


jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
